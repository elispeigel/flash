// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

enum Role {
  USER
  ADMIN
}

model User {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  sessions       Session[]
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model TrainingSession {
  id              Int              @default(autoincrement()) @id
  title           String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  strengthSession StrengthSession
  climbingSession ClimbingSession
}

enum ExerciseType {
  DEADLIFT //HARD weights
  CAMPUS //HARD climbing strength
  DIP //HARD weights
  PULLUP //HARD weights
  FINGERS //HARD weights
  ROW //MEDIUM BW
  DBSP //MEDIUM weights
  FINGER_CURL //MEDIUM weights
  REVERSE_CURL //MEDIUM weights
  BOX_STEP //MEDIUM weights
  VERTICAL_PP //LIGHT cable
  FORWARD_PP //LIGHT cable
  LEG_RAISES //LIGHT bodyweight
  ROLLOUT //LIGHT bodyweight
  SEATED_CORE //LIGHT bodyweight
}

model Set {
  id       Int  @default(autoincrement()) @id
  reps     Int?
  weight   Int? //lbs
  duration Int?
}

enum Difficulty {
  EASY
  AVERAGE
  HARD
}

model Exercise {
  id         Int           @default(autoincrement()) @id
  type       ExerciseType
  sets       Set[]
  difficulty Difficulty
  rest       Int
}

model StrengthSession {
  id        Int         @default(autoincrement()) @id
  exercsies Exercise[]
}

model ClimbingSession {
  id         Int     @default(autoincrement()) @id
  duration   Int
  restLength Int
  notes      String
}

model CircuitSession {
  id         Int     @default(autoincrement()) @id
  duration   Int
  restLength Int
  notes      String?
  highGrade  Int
  lowGrade   Int
  // volume patter? string following pattern 7-3-1 or 6-4-3-1
}

model Project {
  id       Int      @default(autoincrement()) @id
  grade    Int
  duration Int
  attempts Int
  notes    String?
}

model ProjectSession {
  id         Int        @default(autoincrement()) @id
  duration   Int
  restLength Int
  notes      String
  projects   Project[]
}